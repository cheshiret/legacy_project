package com.activenetwork.qa.awo.util;

import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import au.com.bytecode.opencsv.bean.ColumnPositionMappingStrategy;
import au.com.bytecode.opencsv.*;

import java.io.FileReader;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Arrays;
import java.util.List;
import java.sql.ResultSet ;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;

import org.apache.log4j.Logger;

import com.activenetwork.qa.awo.util.MockResultSetMetaData;
import com.activenetwork.qa.awo.util.CSVUtil;
import com.activenetwork.qa.awo.util.AwoUtil;


import com.activenetwork.qa.testapi.util.TestProperty;

/**
 * 
 * @Description: Load csv from specific location
 * @Preconditions: With test property settings

  
 * @author tchen
 * @Date  Sep 29, 2014
 */


public class CSVLoader {
	private static Logger logger=Logger.getLogger(TestProperty.class);
	private static String FILE_PATH = TestProperty.getProperty("csv.path");
	
	public static ArrayList<List<String>> tableArray (String file_name) {
		try {
		ArrayList<List<String>> t = new ArrayList<List<String>>();			
		List<String> list = new ArrayList<String>();
		CSVReader reader = new CSVReader(new FileReader(FILE_PATH + file_name));			
		String [] nextLine = null;		
		
		int i = 0;
		int k = 0;
		while ((nextLine = reader.readNext()) != null) {
			String[] stringArray = list.toArray(new String[nextLine.length]);
			for (int j = 0; j < nextLine.length; j++) {
				stringArray[j] = nextLine[j];
                k = j + 1;
                
			}
			List<String> t2 = Arrays.asList(stringArray);
			t.add(t2);	
			i ++ ;						
		}
		reader.close();
//		System.out.println("Row # is: " + i);
//		System.out.println("Column # is: " + k);
		return t;
		} catch (IOException e) {
			System.out.println("Error!!!");
			logger.warn("Error" + e);
			System.out.println(TestProperty.getProperty("csv.path"));
			System.out.println(FILE_PATH);
			System.out.println(FILE_PATH + file_name);
			return null;			
		}		
	}

	public static int getRowNum () {
		return 0;
//		tableArray();
//		return tableArray.length;
	}
	
	public static int getColNum () {
		return 0;
//		tableArray();
//		return tableArray.length;
	}
	
	public static List<String> getFieldName() {
		boolean haveField = CSVUtil.containsField();
		List<String> fieldName = new ArrayList<String>();
		String getfieldType = CSVUtil.fieldType(); 
		if (haveField) {
			if (getfieldType.contains("col")) {
				return fieldName;
			}
			else {
				return fieldName;
				}
			}		
		
		else{			
			logger.warn("There is no field name saved in the CSV.");
			return null;
		}
	}


		
}


